package com.example.joy.tarrgui.fragments;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;

import com.example.joy.tarr.Session;
import com.example.joy.tarr.SessionClientApi;
import com.example.joy.tarrgui.R;
import com.example.joy.tarrgui.activities.ActivityMain;
import com.example.joy.tarrgui.adapters.AdapterSessionNotify;
import com.example.joy.tarrgui.adapters.AdapterSessionRequest;
import com.example.joy.tarrgui.callbacks.SessionNotifyListner;
import com.example.joy.tarrgui.callbacks.SessionRequestListner;
import com.example.joy.tarrgui.extras.MovieSorter;
import com.example.joy.tarrgui.extras.SortListener;
import com.example.joy.tarrgui.logging.L;

import java.util.ArrayList;
import java.util.Collection;

import retrofit.RestAdapter;

/**
 * Created by joy on 14-04-2015.
 */
public class FragmentRequests extends Fragment implements  SortListener,SessionRequestListner
        ,SwipeRefreshLayout.OnRefreshListener {
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;

    private final String URL = "http://192.168.1.16:8080";
    String str_search;
    Collection<Session> sessions;
    private SessionClientApi sessionServiceSearch = new RestAdapter.Builder()
            .setEndpoint(URL).setLogLevel(RestAdapter.LogLevel.FULL).build()
            .create(SessionClientApi.class);

    //////////////////////////

    private static final String STATE_MOVIES = "state_movies";
    //the arraylist containing our list of box office his
    private ArrayList<Session> mListSession = new ArrayList<Session>();
    //the adapter responsible for displaying our movies within a RecyclerView
    private AdapterSessionRequest mAdapterNotify;

    private SwipeRefreshLayout mSwipeRefreshLayout;
    //the recyclerview containing showing all our movies
    private RecyclerView mRecyclerMovies;
    //the TextView containing error messages generated by Volley
    private TextView mTextError;
    //the sorter responsible for sorting our movie results based on choice made by the user in the FAB
    private MovieSorter mSorter = new MovieSorter();




    /////////////////////////


    public FragmentRequests() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment FragmentSearch.
     */
    // TODO: Rename and change types and number of parameters
    public static FragmentRequests newInstance(String param1, String param2) {
        FragmentRequests fragment = new FragmentRequests();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }
    }
    public void onSortByName(){
        L.t(getActivity(), "sort name search");
    }

    @Override
    public void onSortByDate() {

    }

    @Override
    public void onSortByRating() {

    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment

        final View view = inflater.inflate(R.layout.fragment_requests, container, false);
        mTextError = (TextView) view.findViewById(R.id.textVolleyError);

        mSwipeRefreshLayout = (SwipeRefreshLayout) view.findViewById(R.id.swipeSessionRequest);
        mSwipeRefreshLayout.setOnRefreshListener(this);

        mRecyclerMovies = (RecyclerView) view.findViewById(R.id.listSessionRequest);
        //set the layout manager before trying to display data
        mRecyclerMovies.setLayoutManager(new LinearLayoutManager(getActivity()));
        mAdapterNotify = new AdapterSessionRequest(getActivity());
        mRecyclerMovies.setAdapter(mAdapterNotify);

        //new SessionTask(getActivity(),mRecyclerMovies).execute("");


        return view;

         }

    @Override
    public void onStart(){
        super.onStart();

        new SessionTask(getActivity(),mRecyclerMovies).execute("");

    }
    @Override
    public void onResume(){
        super.onResume();
        new SessionTask(getActivity(),mRecyclerMovies).execute("");
    }

    @Override
    public void onRefresh() {

        new SessionTask(getActivity(),mRecyclerMovies).execute("");
    }

    @Override
    public void onSessionRequestLoaded(ArrayList<Session> listSession) {
        if (mSwipeRefreshLayout.isRefreshing()) {
            mSwipeRefreshLayout.setRefreshing(false);
        }
        mAdapterNotify.setSession(listSession);
    }


    class SessionTask extends AsyncTask<String,String,Boolean> {
        RecyclerView tv;
        Activity mContext;

        public SessionTask(Activity cont, RecyclerView temp){
            this.tv= temp;
            this.mContext=cont;
        }
        @Override
        protected Boolean doInBackground(String... params) {
            /*searchSkills = userServiceSearch.findBySkillsContainingIgnoreCase(txtSearch.getText().toString());
            searchName = userServiceSearch.findByNameContainingIgnoreCase(txtSearch.getText().toString());
            searchCourse = userServiceSearch.findByCourseContainingIgnoreCase(txtSearch.getText().toString());
*/

            sessions = sessionServiceSearch.findByRequestByIgnoreCase(ActivityMain.epta);
            if (sessions.isEmpty()) {
                return false;
            } else {

                return true;
            }
        }

        protected void onPostExecute(Boolean b)
        {

            if(b){
                if(!sessions.isEmpty()){
                    if(!mListSession.containsAll(sessions))
                        mListSession.addAll(sessions);

                /*for(User iter:searchSkills){
                    iter.getEmailId();
                    txtSearchResult.setText(txtSearchResult.getText()+" "+iter.getEmailId()+" "+iter.getName());
                }*/
                }
                /*if(!searchName.isEmpty()){
                    //if(!mListUser.contains(new ArrayList<User>().addAll(searchName)))
                    if(!mListUser.containsAll(searchName))
                        mListUser.addAll(searchName);
                *//*for(User iter:searchName){
                    iter.getEmailId();
                    txtSearchResult.setText(txtSearchResult.getText()+" "+iter.getEmailId()+" "+iter.getName());
                }*//*
                }

                if(!searchCourse.isEmpty()){

                    //if(!mListUser.contains(new ArrayList<User>().addAll(searchCourse)))
                    if(!mListUser.containsAll(searchCourse))
                        mListUser.addAll(searchCourse);

                *//*for(User iter:searchCourse){
                    iter.getEmailId();
                    txtSearchResult.setText(txtSearchResult.getText()+" "+iter.getEmailId()+" "+iter.getName());
                }*//*
                }*/


                Toast.makeText(getActivity(), "Jai mata Di Done", Toast.LENGTH_LONG).show();
            }
            else
                Toast.makeText(getActivity(), "No records found!", Toast.LENGTH_LONG).show();


            onSessionRequestLoaded(mListSession);
            System.out.print("Sessions loaded");
        }
    }
}
